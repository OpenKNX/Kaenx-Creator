<Window x:Class="Kaenx.Creator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Kaenx.Creator"
        xmlns:models="clr-namespace:Kaenx.Creator.Models;assembly=Kaenx.Creator.Share"
        xmlns:conv="clr-namespace:Kaenx.Creator.Converter"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:p="clr-namespace:Kaenx.Creator.Properties"
        xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
        xmlns:ctrl="clr-namespace:Kaenx.Creator.Controls"
        xmlns:select="clr-namespace:Kaenx.Creator.Selectors"
        mc:Ignorable="d"
        Icon="FileLogo.ico"
        x:Name="ViewControl"
        Title="Kaenx-Creator" Height="720" Width="1300">
    <Window.Resources>
        <conv:IntToHex x:Key="IntToHex" />
        <conv:IntToVersion x:Key="IntToVersion" />
        <conv:BoolNegation x:Key="BoolNegate" />
        <conv:EmptyOListToBool x:Key="EmptyListToBool" />
        <conv:EmptyToBool x:Key="EmptyToBool" />
        <conv:EmptyToVisibility x:Key="EmptyToVis" />
        <conv:EnumToVisibility x:Key="EnumToVis" />
        <conv:EnumToVisibility x:Key="EnumToVisNeg" Negate="True" />
        <conv:BoolToVisibility x:Key="BoolToVis" />
        <conv:TypeToBool x:Key="TypeToBool" />
        <conv:StateToBrush x:Key="StateToBrush" />
        <conv:BoolToBrush x:Key="BoolToBrush" TrueValue="Red" FalseValue="Black" />
        <conv:EmptyToBrush x:Key="EmptyToBrush" TrueValue="Red" FalseValue="Black" />

        <Style x:Key="TopTabControl" TargetType="TabControl">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border BorderThickness="0 4 0 0" BorderBrush="#D0CEBF" Grid.Row="1">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter ContentSource="SelectedContent"/>
                                    </Border>
                                </Border>
                            </Border>
                            <TabPanel Grid.Row="0" IsItemsHost="true" Margin="10 0" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftTabControl" TargetType="TabControl">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="4 0 0 0" BorderBrush="#D0CEBF" Grid.Column="1">
                                <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Border Background="{TemplateBinding Background}">
                                        <ContentPresenter ContentSource="SelectedContent"/>
                                    </Border>
                                </Border>
                            </Border>
                            <TabPanel IsItemsHost="true"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TopTabItem" TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0 0 0 4" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Padding="0 0 0 7" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Border" Storyboard.TargetProperty="BorderBrush.Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Green" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Border" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="20" />
                                </Style>
                            </Border.Resources>
                            <Border Name="Border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="5 15 5 5" >
                                <ContentPresenter ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="5 0">
                                    <ContentPresenter.Resources>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="FontSize" Value="17" />
                                        </Style>
                                    </ContentPresenter.Resources>
                                </ContentPresenter>
                            </Border>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="LeftTabItem" TargetType="TabItem">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border Padding="0" Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionStates">
                                    <VisualState x:Name="Unselected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Backx" Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Transparent" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Duration="0:0:0.5" Storyboard.TargetName="Backx" Storyboard.TargetProperty="Color">
                                                <EasingColorKeyFrame KeyTime="0:0:0.5" Value="Green" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Head" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="1" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Duration="0:0:1" Storyboard.TargetName="Head" Storyboard.TargetProperty="Opacity">
                                                <LinearDoubleKeyFrame KeyTime="0:0:1" Value="0.5" />
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border.Resources>
                                <Style TargetType="TextBlock">
                                    <Setter Property="FontSize" Value="20" />
                                </Style>
                            </Border.Resources>

                            <Grid>
                                <Border Name="Border" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="5" Opacity="0.5" >
                                    <Border.Background>
                                        <SolidColorBrush x:Name="Backx" Color="Transparent" />
                                    </Border.Background>
                                </Border>
                                <ContentPresenter Name="Head" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="9" />
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Menu>
            <MenuItem Header="{x:Static p:Resources.menu_proj}">
                <MenuItem x:Name="MenuLoad" Header="{x:Static p:Resources.menu_proj_new}">
                    <MenuItem.Icon>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Menu/New.svg, AppName=Kaenx.Creator}" />
                    </MenuItem.Icon>
                    <MenuItem Header="{x:Static p:Resources.menu_temp_empty}" Click="ClickNew" />
                    <Separator />
                </MenuItem>
                <MenuItem Header="{x:Static p:Resources.menu_proj_open}" Click="ClickOpen">
                    <MenuItem.Icon>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Menu/Open.svg, AppName=Kaenx.Creator}" />
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem x:Name="MenuSave" IsEnabled="False" Header="{x:Static p:Resources.menu_proj_save}">
                    <MenuItem.Icon>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Menu/Save.svg, AppName=Kaenx.Creator}" />
                    </MenuItem.Icon>
                    <MenuItem x:Name="MenuSaveBtn" Header="{x:Static p:Resources.menu_save}" Click="ClickSave" IsEnabled="false" />
                    <MenuItem Header="{x:Static p:Resources.menu_save_as}" Click="ClickSaveAs" />
                    <MenuItem Header="{x:Static p:Resources.menu_save_template}" Click="ClickSaveTemplate" />
                </MenuItem>
                <MenuItem x:Name="MenuClose" IsEnabled="False" Header="{x:Static p:Resources.menu_proj_close}" Click="ClickClose" />
            </MenuItem>
            <MenuItem x:Name="MenuImport" Header="{x:Static p:Resources.menu_impo}">
                <MenuItem Header="{x:Static p:Resources.menu_impo_ets}" Click="ClickImport" Tag="knxprod" />
                <MenuItem Header="{x:Static p:Resources.menu_impo_xml}" Click="ClickImport" Tag="xml" />
            </MenuItem>
            <MenuItem x:Name="MenuSign" Header="{x:Static p:Resources.menu_sign}">
                <MenuItem Header="{x:Static p:Resources.menu_sign_folder}" Click="ClickSignFolder" Tag="knxprod" />
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.menu_options}">
                <MenuItem x:Name="MenuOutput" Header="{x:Static p:Resources.menu_out}">
                    <MenuItem IsCheckable="True" Header="{x:Static p:Resources.menu_out_exe}" Tag="exe" Click="ChangeOutput" />
                    <MenuItem IsCheckable="True" Header="{x:Static p:Resources.menu_out_ae}" Tag="ae" Click="ChangeOutput" />
                </MenuItem>
                <MenuItem x:Name="MenuLang" Header="{x:Static p:Resources.menu_lang}">
                    <MenuItem Header="Please restart Application after changing language" IsEnabled="False" />
                    <Separator />
                    <MenuItem IsCheckable="True" Header="{x:Static p:Resources.menu_lang_default}" Tag="def" Click="ChangeLang" />
                    <MenuItem IsCheckable="True" Header="Deutsch" Tag="de-DE" Click="ChangeLang" />
                    <MenuItem IsCheckable="True" Header="English" Tag="en-US" Click="ChangeLang" />
                    <MenuItem IsCheckable="True" Header="France" Tag="fr-FR" Click="ChangeLang" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="{x:Static p:Resources.menu_info}">
                <MenuItem Header="{x:Static p:Resources.menu_info_vers}" Click="ClickShowVersion" />
                <MenuItem x:Name="MenuDebug" IsCheckable="True" Header="{x:Static p:Resources.menu_info_debug}" Click="ClickToggleDebug" />
                <MenuItem Header="{x:Static p:Resources.menu_info_help}" Click="ClickHelp" />
                <MenuItem Header="{x:Static p:Resources.menu_info_check}" Click="ClickCheckVersion" />
                <MenuItem x:Name="MenuUpdate" IsCheckable="True" Header="{x:Static p:Resources.menu_info_auto}" Click="ChangeAutoUpdate" />
            </MenuItem>
        </Menu>

        <TabControl x:Name="TabsEdit" Grid.Row="1" Margin=" 0 10 0 0" IsEnabled="False" BorderThickness="0 0 0 4" Style="{StaticResource ResourceKey=TopTabControl}">
            <TabItem Header="{x:Static p:Resources.tabs_gen}" Style="{StaticResource TopTabItem}">
                <TabControl TabStripPlacement="Left" Style="{StaticResource LeftTabControl}">
                    <TabItem Header="{x:Static p:Resources.tabs_proj}" Style="{StaticResource LeftTabItem}">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="HeaderedContentControl">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </StackPanel.Resources>
                            <HeaderedContentControl Header="{x:Static p:Resources.tgen_guid}">
                                <TextBlock Text="{Binding General.Guid}" />
                            </HeaderedContentControl>
                            <CheckBox Content="OpenKNX Projekt" IsChecked="{Binding General.IsOpenKnx}" />
                            <HeaderedContentControl Header="{x:Static p:Resources.tgen_manu}" Visibility="{Binding General.IsOpenKnx, Converter={StaticResource BoolToVis}, ConverterParameter=true}">
                                <TextBox Text="{Binding General.ManufacturerId, Converter={StaticResource IntToHex}, ConverterParameter=4}" MaxLength="4" />
                            </HeaderedContentControl>
                            <HeaderedContentControl Header="{x:Static p:Resources.tgen_openknxid}" Visibility="{Binding General.IsOpenKnx, Converter={StaticResource BoolToVis}}">
                                <TextBox Text="{Binding General.ManufacturerId, Converter={StaticResource IntToHex}, ConverterParameter=2}" MaxLength="2" />
                            </HeaderedContentControl>
                            <HeaderedContentControl Header="{x:Static p:Resources.tgen_name}">
                                <TextBox Text="{Binding General.ProjectName, UpdateSourceTrigger=PropertyChanged}" />
                            </HeaderedContentControl>

                            <HeaderedContentControl Header="{x:Static p:Resources.gen_langs}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition />
                                        <ColumnDefinition MaxWidth="300" />
                                    </Grid.ColumnDefinitions>
                                    
                                    <ListBox x:Name="SupportedLanguages" ItemsSource="{Binding General.Application.Languages}" DisplayMemberPath="Text" />
                                    
                                    <StackPanel Grid.Column="1">
                                        <HeaderedContentControl Header="{x:Static p:Resources.tgen_lang_def}">
                                            <ComboBox ItemsSource="{Binding General.Application.Languages}" SelectedIndex="{Binding General.Application.DefaultLanguageIndex}" SelectedValue="{Binding General.Application.DefaultLanguage}" SelectedValuePath="CultureCode" DisplayMemberPath="Text"></ComboBox>
                                        </HeaderedContentControl>
                                        <HeaderedContentControl Header="{x:Static p:Resources.gen_edit}">
                                            <StackPanel>
                                                <ComboBox x:Name="LanguagesList" DisplayMemberPath="Text">
                                                    <models:Language Text="Tschechisch" CultureCode="cs-CZ" />
                                                    <models:Language Text="Dänisch" CultureCode="da-DK" />
                                                    <models:Language Text="Deutsch" CultureCode="de-DE" />
                                                    <models:Language Text="Griechisch" CultureCode="el-GR" />
                                                    <models:Language Text="Englisch" CultureCode="en-US" />
                                                    <models:Language Text="Spanisch" CultureCode="es-ES" />
                                                    <models:Language Text="Finnisch" CultureCode="fi-FI" />
                                                    <models:Language Text="Französisch" CultureCode="fr-FR" />
                                                    <models:Language Text="Ungarisch" CultureCode="hu-HU" />
                                                    <models:Language Text="Isländisch" CultureCode="is-IS" />
                                                    <models:Language Text="Italienisch" CultureCode="it-IT" />
                                                    <models:Language Text="Japanisch" CultureCode="ja-JP" />
                                                    <models:Language Text="Norwegisch" CultureCode=" nb-NO" />
                                                    <models:Language Text="Niederländisch" CultureCode="nl-NL" />
                                                    <models:Language Text="Polnisch" CultureCode="pl-PL" />
                                                    <models:Language Text="Portugisisch" CultureCode="pt-PT" />
                                                    <models:Language Text="Rumänisch" CultureCode="ro-RO" />
                                                    <models:Language Text="Russisch" CultureCode="ru-RU" />
                                                    <models:Language Text="Slovakisch" CultureCode="sk-SK" />
                                                    <models:Language Text="Slovenisch" CultureCode="sl-SI" />
                                                    <models:Language Text="Schwedisch" CultureCode="sv-SE" />
                                                    <models:Language Text="Türkisch" CultureCode="tr-TR" />
                                                    <models:Language Text="Chinesisch" CultureCode="zh-CN" />
                                                </ComboBox>
                                                
                                                <Button Content="{x:Static p:Resources.gen_add}" Click="ClickAddLanguage" IsEnabled="{Binding ElementName=LanguagesList, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                                                <Button  Content="{x:Static p:Resources.gen_remove}" Click="ClickRemoveLanguage" IsEnabled="{Binding ElementName=SupportedLanguages, Path=SelectedItem, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                                                <Button Content="{x:Static p:Resources.gen_translate_fix}" Click="ClickFixLanguage" />
                                                <Button Content="{x:Static p:Resources.gen_translate}" Click="ClickOpenTranslator" />
                                            </StackPanel>
                                        </HeaderedContentControl>
                                    </StackPanel>
                                </Grid>
                            </HeaderedContentControl>
                        </StackPanel>
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_cat}" Style="{StaticResource LeftTabItem}">
                        <Grid Grid.Row="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="350" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
        
                            <TreeView Name="CatalogTree" ItemsSource="{Binding General.Catalog}">
                                <TreeView.Resources>
                                    <HierarchicalDataTemplate DataType="{x:Type models:CatalogItem}" ItemsSource="{Binding Items}">
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Header="{x:Static p:Resources.tcat_add_sub}" Click="ClickCatalogContext" IsEnabled="{Binding IsSection}" />
                                                    <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickCatalogContextRemove" IsEnabled="{Binding Parent, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" />
                                                </ContextMenu>
                                            </StackPanel.ContextMenu>
                                            <Image Source="/WpfTutorialSamples;component/Images/group.png" Margin="0,0,5,0" />
                                            <TextBlock Text="{Binding Name}" />
                                            <TextBlock Text=" [" Foreground="Blue" />
                                            <TextBlock Text="{Binding Items.Count}" Foreground="Blue" />
                                            <TextBlock Text="]" Foreground="Blue" />
                                        </StackPanel>
                                    </HierarchicalDataTemplate>
                                </TreeView.Resources>
                            </TreeView>
        
                            <StackPanel Grid.Column="1" DataContext="{Binding ElementName=CatalogTree, Path=SelectedItem}" IsEnabled="{Binding ElementName=CatalogTree, Path=SelectedItem.Parent, Converter={StaticResource EmptyToBool}, ConverterParameter=true, FallbackValue=False}">
                                <StackPanel.Resources>
                                    <Style TargetType="HeaderedContentControl">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </StackPanel.Resources>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_number}">
                                    <TextBox Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <CheckBox Name="InCatalogSection" IsChecked="{Binding IsSection}" Content="{x:Static p:Resources.tcat_iscat}" IsEnabled="{Binding Items.Count, Converter={StaticResource EmptyListToBool}}" />
                                
                                <HeaderedContentControl Header="{x:Static p:Resources.gen_text}" Visibility="{Binding ElementName=InCatalogSection, Path=IsChecked, Converter={StaticResource BoolToVis}}">
                                    <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </HeaderedContentControl>
                            </StackPanel>
                        </Grid>
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_hard}" Style="{StaticResource LeftTabItem}">
                        <ScrollViewer>
                            <StackPanel DataContext="{Binding General.Info}">
                                <StackPanel.Resources>
                                    <Style TargetType="HeaderedContentControl">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="CheckBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Margin" Value="5" />
                                    </Style>
                                </StackPanel.Resources>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_serial}">
                                    <TextBox Text="{Binding SerialNumber, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_vers}">
                                    <TextBox Text="{Binding Version, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_buscurrent}">
                                    <TextBox Text="{Binding BusCurrent, UpdateSourceTrigger=PropertyChanged}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.prop_ordernumber}">
                                    <TextBox Text="{Binding OrderNumber}" />
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.gen_text}">
                                    <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </HeaderedContentControl>
                                <HeaderedContentControl Header="{x:Static p:Resources.gen_desc}">
                                    <DataGrid ItemsSource="{Binding Description}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </HeaderedContentControl>
                                <CheckBox IsChecked="{Binding HasIndividualAddress, Mode=TwoWay}" Content="{x:Static p:Resources.prop_haspa}" />
                                <CheckBox IsChecked="{Binding IsPowerSupply, Mode=TwoWay}" Content="{x:Static p:Resources.prop_ispower}" />
                                <CheckBox IsChecked="{Binding IsCoppler, Mode=TwoWay}" Content="{x:Static p:Resources.prop_iscoupler}" />
                                <CheckBox IsChecked="{Binding IsIpEnabled, Mode=TwoWay}" Content="{x:Static p:Resources.prop_ip}" />
        
                                <CheckBox IsChecked="{Binding HasApplicationProgram, Mode=TwoWay}" Content="{x:Static p:Resources.prop_hasapp}" />
                                <CheckBox IsChecked="{Binding HasApplicationProgram2, Mode=TwoWay}" Content="{x:Static p:Resources.prop_hasapp2}" />
                                <CheckBox IsChecked="{Binding IsRailMounted, Mode=TwoWay}" Content="{x:Static p:Resources.prop_isreg}" />
                            </StackPanel>
                        </ScrollViewer>
                    </TabItem>
                    
                    <TabItem Style="{StaticResource LeftTabItem}">
                        <TabItem.Header>
                            <TextBlock Text="{x:Static p:Resources.tabs_app}" Foreground="{Binding General.Info.Mask, Converter={StaticResource EmptyToBrush}}" />
                        </TabItem.Header>
                        <StackPanel Grid.Column="2" Grid.Row="1" DataContext="{Binding General.Info}">
                            <StackPanel.Resources>
                                <Style TargetType="HeaderedContentControl">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </StackPanel.Resources>
                            <HeaderedContentControl Header="{x:Static p:Resources.tapps_info}">
                                <TextBlock>
                                    <Hyperlink NavigateUri="https://github.com/OpenKNX/OpenKNX/wiki/Information-about-KnxProd#applicationnumber" RequestNavigate="Hyperlink_RequestNavigate">
                                        https://github.com/OpenKNX/OpenKNX/wiki/Information-about-KnxProd#applicationnumber
                                    </Hyperlink>
                                </TextBlock>
                            </HeaderedContentControl>
                            <HeaderedContentControl Header="{x:Static p:Resources.prop_number}">
                                <Grid>
                                    <TextBox Text="{Binding AppNumber, Converter={StaticResource IntToHex}}" MaxLength="4" Visibility="{Binding General.IsOpenKnx, ElementName=ViewControl, Converter={StaticResource BoolToVis}, ConverterParameter=true}" />
                                    <TextBox Text="{Binding AppNumber, Converter={StaticResource IntToHex}}" MaxLength="2" Visibility="{Binding General.IsOpenKnx, ElementName=ViewControl, Converter={StaticResource BoolToVis}}" />
                                </Grid>
                            </HeaderedContentControl>
                            <HeaderedContentControl Header="{x:Static p:Resources.prop_bcu}" IsEnabled="{Binding Mask, Converter={StaticResource EmptyToBool}}">
                                <ComboBox SelectedItem="{Binding Mask, Mode=TwoWay}" Margin="0" DisplayMemberPath="Id" ItemsSource="{Binding BCUs, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" />
                            </HeaderedContentControl>
                            <Button Content="{x:Static p:Resources.tapps_reset_bcu}" Margin="5" IsEnabled="{Binding Mask, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" Click="ClickResetBCU" />
                            <!--// TODO translate-->
                            <TextBlock Text="{x:Static p:Resources.tapps_bcu_empty}" Foreground="Red" Visibility="{Binding Mask, Converter={StaticResource EmptyToVis}, ConverterParameter=true}" Margin="5 0 0 0" />
    
                            <TextBlock Margin="5 5 0 0">
                                <Run Text="{x:Static p:Resources.tapps_memory}" />
                                <Run Text="{Binding Mask.Memory}" />
                            </TextBlock>
    
                            <TextBlock Margin="5 0 0 0">
                                <Run Text="{x:Static p:Resources.tapps_loadp}" />
                                <Run Text="{Binding Mask.Procedure}" />
                            </TextBlock>
    
                            <TextBlock Margin="5 0 0 5">
                                <Run Text="{x:Static p:Resources.tapps_medium}" />
                                <Run Text="{Binding Mask.Mediums, Mode=OneWay}" />
                            </TextBlock>
                        </StackPanel>
                    </TabItem>
                </TabControl>
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_bagg}" Style="{StaticResource TopTabItem}">
                <ctrl:BaggageView General="{Binding General}" />
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_icon}" Style="{StaticResource TopTabItem}">
                <ctrl:IconView General="{Binding General}" />
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_app}" IsEnabled="{Binding General.Info.Mask, Converter={StaticResource EmptyToBool}, ConverterParameter=true}" Style="{StaticResource TopTabItem}">
                <TabControl x:Name="VersionTabs" SelectionChanged="TabChanged" TabStripPlacement="Left" Style="{StaticResource LeftTabControl}">
                    
                    <TabControl.Template>
                        <ControlTemplate TargetType="TabControl">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                
                                <Border BorderBrush="LightGray" BorderThickness="0 0 2 0">
                                    <ScrollViewer 
                                        HorizontalScrollBarVisibility="Disabled"  
                                        VerticalScrollBarVisibility="Auto" 
                                        FlowDirection="RightToLeft">
                                            <TabPanel x:Name="HeaderPanel" Panel.ZIndex ="0" KeyboardNavigation.TabIndex="1" IsItemsHost="true" />
                                    </ScrollViewer>
                                </Border>

                                <ContentPresenter 
                                    x:Name="PART_SelectedContentHost"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    ContentSource="SelectedContent"
                                    Grid.Column="1" />
                            </Grid>
                        </ControlTemplate>
                    </TabControl.Template>

                    <TabItem Header="{x:Static p:Resources.tabs_gen}" DataContext="{Binding General.Application}" Style="{StaticResource LeftTabItem}">
                        <StackPanel>
                            <StackPanel.Resources>
                                <Style TargetType="HeaderedContentControl">
                                    <Setter Property="Margin" Value="5" />
                                    <Setter Property="IsTabStop" Value="false" />
                                </Style>
                                <Style TargetType="CheckBox">
                                    <Setter Property="Margin" Value="10 5" />
                                </Style>
                                <Style TargetType="ComboBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="Button">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="ListBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                                <Style TargetType="DataGrid">
                                    <Setter Property="Margin" Value="5" />
                                </Style>
                            </StackPanel.Resources>
                            
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition MaxWidth="300" />
                                </Grid.ColumnDefinitions>

                                <StackPanel>
                                    <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="{x:Static p:Resources.gen_text}">
                                        <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                                <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </HeaderedContentControl>
                                    
                                    <CheckBox IsChecked="{Binding IsParameterRefAuto}" Content="{x:Static p:Resources.vgen_autopara}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsComObjectRefAuto}" Content="{x:Static p:Resources.vgen_autocom}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsUnionActive}" Content="{x:Static p:Resources.vgen_union}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsModulesActive}" Content="{x:Static p:Resources.vgen_mods}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsMessagesActive}" Content="{x:Static p:Resources.vgen_msg}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsHelpActive}" Content="{x:Static p:Resources.vgen_help}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsPreETS4}" Content="{x:Static p:Resources.vgen_ets4}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsSecureActive}" Content="{x:Static p:Resources.vgen_secure}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding IsBusInterfaceActive}" Content="{x:Static p:Resources.vgen_businterface}" HorizontalAlignment="Left" />
                                    <CheckBox IsChecked="{Binding HasBusInterfaceRouter}" Content="{x:Static p:Resources.vgen_busrouter}" Visibility="{Binding IsBusInterfaceActive, Converter={StaticResource BoolToVis}}" HorizontalAlignment="Left" />
                                
                                    <HeaderedContentControl Header="{x:Static p:Resources.vgen_businterface_count}" Visibility="{Binding IsBusInterfaceActive, Converter={StaticResource BoolToVis}}">
                                        <TextBox Text="{Binding BusInterfaceCounter}" Margin="5" />
                                    </HeaderedContentControl>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>

                                        <StackPanel>
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_addrmem}" Visibility="{Binding General.Info.Mask.Memory, ElementName=ViewControl, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <ComboBox ItemsSource="{Binding Memories}" SelectedItem="{Binding AddressMemoryObject}" DisplayMemberPath="Name" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_addroff}" Visibility="{Binding General.Info.Mask.Memory, ElementName=ViewControl, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding AddressTableOffset, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_addrmax}">
                                                <TextBox Text="{Binding AddressTableMaxCount, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                        </StackPanel>

                                        <StackPanel Grid.Column="1">
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_assomem}" Visibility="{Binding General.Info.Mask.Memory, ElementName=ViewControl, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <ComboBox ItemsSource="{Binding Memories}" SelectedItem="{Binding AssociationMemoryObject}" DisplayMemberPath="Name" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_assooff}" Visibility="{Binding General.Info.Mask.Memory, ElementName=ViewControl, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding AssociationTableOffset, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_assomax}">
                                                <TextBox Text="{Binding AssociationTableMaxCount, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                        </StackPanel>

                                        <StackPanel Grid.Column="2">
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_commem}" Visibility="{Binding General.Info.Mask.Memory, ElementName=ViewControl, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <ComboBox ItemsSource="{Binding Memories}" SelectedItem="{Binding ComObjectMemoryObject}" DisplayMemberPath="Name" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.tver_comoff}" Visibility="{Binding General.Info.Mask.Memory, ElementName=ViewControl, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding ComObjectTableOffset, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                        </StackPanel>
                                    </Grid>
                                </StackPanel>

                                <StackPanel Grid.Column="1">
                                    <HeaderedContentControl Header="{x:Static p:Resources.prop_vers}">
                                        <TextBox Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="{x:Static p:Resources.prop_etsvers}">
                                        <TextBox Text="{Binding Number, Converter={StaticResource IntToVersion}, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="{x:Static p:Resources.prop_versreplace}">
                                        <TextBox Text="{Binding ReplacesVersions, UpdateSourceTrigger=PropertyChanged}" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="{x:Static p:Resources.prop_ns}">
                                        <ComboBox x:Name="NamespaceSelection" DisplayMemberPath="DisplayName" SelectedValue="{Binding NamespaceVersion}" SelectedIndex="3" SelectedValuePath="Number" />
                                    </HeaderedContentControl>
                                    <HeaderedContentControl Header="{x:Static p:Resources.prop_ipconfig}" Visibility="{Binding General.Info.IsIpEnabled, ElementName=ViewControl, Converter={StaticResource BoolToVis}}">
                                        <ComboBox SelectedValue="{Binding IpConfig}" SelectedValuePath="Tag">
                                            <ComboBoxItem Content="{x:Static p:Resources.prop_ipconfig_tool}" Tag="Tool" />
                                            <ComboBoxItem Content="{x:Static p:Resources.prop_ipconfig_custom}" Tag="Custom" />
                                        </ComboBox>
                                    </HeaderedContentControl>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_check}" Style="{StaticResource LeftTabItem}">
                        <ctrl:CheckView General="{Binding General}" Version="{Binding General.Application}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_mem}" DataContext="{Binding General.Application}" Style="{StaticResource LeftTabItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition Width="100" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto" />
                                <RowDefinition />
                            </Grid.RowDefinitions>

                            <Button Content="{x:Static p:Resources.gen_add}" Click="ClickAddMemory" Margin="0 0 1 2" />
                            <Button Grid.Column="1" Content="{x:Static p:Resources.gen_remove}" Click="ClickRemoveMemory" Margin="1 0 0 2" />

                            <ListView x:Name="ListMemories" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Memories}" DisplayMemberPath="Name" />


                            <TabControl Grid.Column="2" Grid.RowSpan="3" DataContext="{Binding ElementName=ListMemories, Path=SelectedItem}" IsEnabled="{Binding Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
                                <TabItem Header="{x:Static p:Resources.tmem_settings}">
                                    <ScrollViewer Grid.Column="3" Grid.RowSpan="2">
                                        <StackPanel Margin="5">
                                            <StackPanel.Resources>
                                                <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                                                    <ObjectDataProvider.MethodParameters>
                                                        <x:Type TypeName="models:MemoryTypes"/>
                                                    </ObjectDataProvider.MethodParameters>
                                                </ObjectDataProvider>
                                                <Style TargetType="HeaderedContentControl">
                                                    <Setter Property="Margin" Value="5" />
                                                    <Setter Property="IsTabStop" Value="false" />
                                                </Style>
                                                <Style TargetType="CheckBox">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                                <Style TargetType="ComboBox">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                                <Style TargetType="ListView">
                                                    <Setter Property="Margin" Value="5" />
                                                </Style>
                                            </StackPanel.Resources>
        
                                            <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                                                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.prop_address}" Visibility="{Binding ElementName=ViewControl, Path=General.Info.Mask.Memory, Converter={StaticResource EnumToVis}, ConverterParameter=Absolute}">
                                                <TextBox Text="{Binding Address, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HeaderedContentControl>
                                            <CheckBox Content="{x:Static p:Resources.vgen_autosize}"  IsChecked="{Binding IsAutoSize}" />
                                            <CheckBox Content="{x:Static p:Resources.vgen_autoload}"  IsChecked="{Binding IsAutoLoad}" />
                                            <HeaderedContentControl Header="{x:Static p:Resources.prop_size}" IsEnabled="{Binding IsAutoSize, Converter={StaticResource BoolNegate}}">
                                                <TextBox Text="{Binding Size, UpdateSourceTrigger=PropertyChanged}" />
                                            </HeaderedContentControl>
                                            <HeaderedContentControl Header="{x:Static p:Resources.prop_offset}" Visibility="{Binding ElementName=ViewControl, Path=General.Info.Mask.Memory, Converter={StaticResource EnumToVis}, ConverterParameter=Relative}">
                                                <TextBox Text="{Binding Offset, UpdateSourceTrigger=PropertyChanged}"/>
                                            </HeaderedContentControl>
                                            <CheckBox Content="{x:Static p:Resources.vgen_mautopara}" IsChecked="{Binding IsAutoPara}" />
                                            <CheckBox Content="{x:Static p:Resources.vgen_mautoorder}" IsEnabled="{Binding IsAutoPara}" IsChecked="{Binding IsAutoOrder}" />        
                                        </StackPanel>
                                    </ScrollViewer>
                                </TabItem>

                                <TabItem Header="{x:Static p:Resources.tmem_heatmap}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="auto" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <Button Grid.ColumnSpan="2" Margin="5 5 5 0" Content="{x:Static p:Resources.vgen_heatmap}" Click="ClickCalcHeatmap" />
    
                                        <ctrl:MemorySectionsView Grid.Row="1" Memory="{Binding .}" Margin="5" />
                                    </Grid>
                                </TabItem>
                            </TabControl>
                            
                        </Grid>
                    </TabItem>

                    <TabItem Header="OpenKNX Modules" Visibility="{Binding General.IsOpenKnx, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <ctrl:OpenKnxView Version="{Binding General.Application}" General="{Binding General, ElementName=ViewControl}" />
                    </TabItem>
                    
                    <TabItem Header="{x:Static p:Resources.tabs_parat}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ParameterTypeView Baggages="{Binding General.Baggages}" Icons="{Binding General.Icons}" Version="{Binding General.Application}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_union}" DataContext="{Binding General.Application}" Visibility="{Binding IsUnionActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <ctrl:UnionView Version="{Binding .}" Module="{Binding .}" />
                    </TabItem>
                    
                    <TabItem Header="{x:Static p:Resources.tabs_alloc}" DataContext="{Binding General.Application}" Visibility="{Binding IsModulesActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}"> 
                        <ctrl:AllocatorView Module="{Binding .}" />
                    </TabItem>


                    <TabItem Header="{x:Static p:Resources.tabs_module}" DataContext="{Binding General.Application}" Visibility="{Binding IsModulesActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ModuleView Version="{Binding .}" Icons="{Binding General.Icons, ElementName=ViewControl}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_paras}" DataContext="{Binding General.Application}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ParameterView Version="{Binding .}" Module="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_pararefs}" DataContext="{Binding General.Application}" Visibility="{Binding IsParameterRefAuto, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ParameterRefView Version="{Binding .}" Module="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_coms}" DataContext="{Binding General.Application}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ComObjectView Version="{Binding .}" Module="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_comrefs}" DataContext="{Binding General.Application}" Visibility="{Binding IsComObjectRefAuto, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ComObjectRefView Version="{Binding .}" Module="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_scripts}" DataContext="{Binding General.Application}" Style="{StaticResource LeftTabItem}">
                        <ctrl:ScriptView Version="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_msg}" DataContext="{Binding General.Application}" Visibility="{Binding IsMessagesActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <ctrl:MessagesView Version="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_loadp}" Style="{StaticResource LeftTabItem}">
                        <ctrl:LoadProcedures Mask="{Binding General.Info.Mask}" Version="{Binding General.Application}"/>
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_help}" DataContext="{Binding General.Application}" Visibility="{Binding IsHelpActive, Converter={StaticResource BoolToVis}}" Style="{StaticResource LeftTabItem}">
                        <ctrl:HelpView Version="{Binding .}" />
                    </TabItem>

                    <TabItem Header="{x:Static p:Resources.tabs_dyn}" Style="{StaticResource LeftTabItem}">
                        <ctrl:DynamicView Version="{Binding General.Application}" Module="{Binding General.Application}" Icons="{Binding General.Icons, ElementName=ViewControl}" />
                    </TabItem>


                </TabControl>
            </TabItem>

            <TabItem Header="{x:Static p:Resources.tabs_pub}" Style="{StaticResource TopTabItem}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <StackPanel>
                        <StackPanel.Resources>
                            <Style TargetType="HeaderedContentControl">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="CheckBox">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="ComboBox">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="Button">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                            <Style TargetType="ListView">
                                <Setter Property="Margin" Value="5" />
                            </Style>
                        </StackPanel.Resources>
                        
                        <HeaderedContentControl Header="{x:Static p:Resources.prop_vers}">
                            <TextBox Text="{Binding General.Application.Number, UpdateSourceTrigger=PropertyChanged}" />
                        </HeaderedContentControl>
                        <HeaderedContentControl Header="{x:Static p:Resources.tpub_filename}">
                            <TextBox Text="{Binding General.FileName}" />
                        </HeaderedContentControl>

                        <CheckBox x:Name="DevelopCheckBox" Content="Develop" />

                        <Button Content="{x:Static p:Resources.tabs_pub}" Click="Button_Click" />
                    </StackPanel>

                    <ScrollViewer Grid.Row="1">
                        <ItemsControl ItemsSource="{Binding PublishActions}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Border BorderBrush="Gray" BorderThickness="0 0 0 1">
                                        <Grid Margin="10 5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
            
                                            <TextBlock ToolTip="{x:Static p:Resources.tcheck_tooltip}" Visibility="{Binding CanGoToItem, Converter={StaticResource BoolToVis}}">
                                                <Hyperlink NavigateUri="https://example.com" RequestNavigate="ClickCheckHyperlink">&lt;--</Hyperlink>
                                            </TextBlock>
                                            <TextBlock Grid.Column="1" Text="{Binding Text}" Foreground="{Binding State, Converter={StaticResource StateToBrush}}" />
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>

        <Grid x:Name="LogoGrid" Grid.Row="1" Background="White">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition />
                <RowDefinition Height="auto" />
                <RowDefinition Height="150" />
            </Grid.RowDefinitions>

            <TextBlock FontSize="25" HorizontalAlignment="Center" Text="{x:Static p:Resources.main_l1}" Margin="20" />

            <TextBlock FontSize="17" HorizontalAlignment="Center" Grid.Row="1">
                <Run Text="{x:Static p:Resources.main_l2}" />
                <LineBreak />
                <Run Text="{x:Static p:Resources.main_l3}" />
            </TextBlock>

            <TextBlock Grid.Row="3" HorizontalAlignment="Center">
                <Run Text="{x:Static p:Resources.main_l4}" />
                <LineBreak />
                <Run Text="{x:Static p:Resources.main_l5}" />
                <Hyperlink NavigateUri="https://github.com/OpenKNX" RequestNavigate="Hyperlink_RequestNavigate">Github</Hyperlink>
            </TextBlock>

            <Image Grid.Row="4" Source="Assets\Images\OpenKNX.png" Margin="10" />
        </Grid>
    </Grid>
</Window>
