<UserControl
    x:Class="Kaenx.Creator.Controls.DynamicView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Kaenx.Creator.Properties"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:conv="clr-namespace:Kaenx.Creator.Converter"
    xmlns:models="clr-namespace:Kaenx.Creator.Models;assembly=Kaenx.Creator.Share"
    xmlns:dyn="clr-namespace:Kaenx.Creator.Models.Dynamic;assembly=Kaenx.Creator.Share"
    xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
    xmlns:select="clr-namespace:Kaenx.Creator.Selectors"
    mc:Ignorable="d"
    x:Name="ViewControl"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        <conv:DataToImage x:Key="DataToImage" />
        <conv:EmptyToBool x:Key="EmptyToBool" />
        <conv:BoolToVisibility x:Key="BoolToVis" />
        <conv:EnumToVisibility x:Key="EnumToVis" />
        <conv:BoolNegation x:Key="BoolNegate" />
        
        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="dyn:BlockLayout"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
        <ObjectDataProvider x:Key="dataFromEnumAccess" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="models:ParamAccess"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>


        <DataTemplate x:Key="TempDynMain">
            <TextBlock Margin="5" Text="{x:Static p:Resources.tdyn_tmain}" />
        </DataTemplate>
        <DataTemplate x:Key="TempDynMainModule">
            <TextBlock Margin="5" Text="{x:Static p:Resources.tdyn_tmain}" />
        </DataTemplate>
        <DataTemplate x:Key="TempDynIndependent">
            <TextBlock Margin="5" Text="{x:Static p:Resources.tdyn_tindchan}" TextWrapping="Wrap" />
        </DataTemplate>
        <DataTemplate x:Key="TempDynParameter">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pararef}">
                     <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ComboBox IsEditable="true" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding ParameterRefObject}" DisplayMemberPath="Name" />
                        <TextBlock Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10 0 0 4">
                            <Hyperlink ToolTip="{x:Static p:Resources.tcheck_tooltip}" NavigateUri="https://example.com" RequestNavigate="DynParameterParaRefLink">&lt;--</Hyperlink>
                        </TextBlock>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_paraname}">
                    <TextBlock Text="{Binding ParameterRefObject.ParameterObject.Name}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_paracell}">
                    <TextBox Text="{Binding Cell, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_icon}">
                    <Grid Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseIcon}" VerticalAlignment="Center" />
                        
                        <ComboBox Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding UseIcon}" ItemsSource="{Binding Icons, ElementName=ViewControl}" SelectedItem="{Binding IconObject}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Data, Converter={StaticResource DataToImage}}" Height="20" />
                                        <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center" Margin="10 0 0 0" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </HeaderedContentControl>

                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_paratext}" Visibility="{Binding ParameterRefObject.OverwriteText, Converter={StaticResource BoolToVis}, ConverterParameter=true, FallbackValue=Collapsed}" IsEnabled="False" Margin="5 30 5 5">
                    <DataGrid ItemsSource="{Binding ParameterRefObject.ParameterObject.Text}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" />
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_parareftext}" Visibility="{Binding ParameterRefObject.OverwriteText, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" IsEnabled="False" Margin="5 30 5 5">
                    <DataGrid ItemsSource="{Binding ParameterRefObject.Text}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" />
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>

                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_help}" Visibility="{Binding Version.IsHelpActive, ElementName=ViewControl, Converter={StaticResource BoolToVis}}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding HasHelptext}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" IsEnabled="{Binding HasHelptext}" ItemsSource="{Binding Version.Helptexts, ElementName=ViewControl}" SelectedItem="{Binding Helptext}" DisplayMemberPath="Name" />
                    </Grid>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynModule">
            <StackPanel>
                <Grid Margin="5 0">
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{x:Static p:Resources.gen_id}" />
                        <Run Text="{Binding Id}"/>
                    </TextBlock>
                    <Button Content="{x:Static p:Resources.gen_id_reset}" HorizontalAlignment="Right" Click="ResetId" />
                </Grid>      
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_mods}">
                    <ComboBox ItemsSource="{Binding Module.Modules, ElementName=ViewControl}" SelectedItem="{Binding ModuleObject}" DisplayMemberPath="Name" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_args}">
                    <DataGrid ItemsSource="{Binding Arguments}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.prop_name}" Binding="{Binding Argument.Name}" IsReadOnly="True" />
                            <DataGridTextColumn Header="{x:Static p:Resources.tdyn_type}" Binding="{Binding Argument.Type}" IsReadOnly="True" />
                            <DataGridCheckBoxColumn Header="{x:Static p:Resources.tdyn_usealloc}" Binding="{Binding UseAllocator}" />
                            <DataGridTemplateColumn Header="{x:Static p:Resources.prop_value}">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBlock Margin="2 0" Text="{Binding Value}" HorizontalAlignment="Center" Visibility="{Binding UseAllocator, Converter={StaticResource BoolToVis}, ConverterParameter=true}" />
                                            <TextBlock Margin="2 0" Visibility="{Binding UseAllocator, Converter={StaticResource BoolToVis}}">
                                                <Run Text="Allocator:" />
                                                <Run Text="{Binding Allocator.Name}" />
                                            </TextBlock>
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                                <DataGridTemplateColumn.CellEditingTemplate>
                                    <DataTemplate>
                                        <Grid>
                                            <TextBox Text="{Binding Value}" Visibility="{Binding UseAllocator, Converter={StaticResource BoolToVis}, ConverterParameter=true}" />
                                            <ComboBox ItemsSource="{Binding Version.Allocators, ElementName=ViewControl}" SelectedItem="{Binding Allocator}" DisplayMemberPath="Name" Visibility="{Binding UseAllocator, Converter={StaticResource BoolToVis}}" />
                                        </Grid>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellEditingTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynComObject">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_comref}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ComboBox IsEditable="true" ItemsSource="{Binding Module.ComObjectRefs, ElementName=ViewControl}" SelectedItem="{Binding ComObjectRefObject}" DisplayMemberPath="Name" />
                        <TextBlock Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10 0 0 4">
                            <Hyperlink ToolTip="{x:Static p:Resources.tcheck_tooltip}" NavigateUri="https://example.com" RequestNavigate="DyComObjectRefLink">&lt;--</Hyperlink>
                        </TextBlock>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_comname}">
                    <TextBlock Text="{Binding ComObjectRefObject.ComObjectObject.Name}" />
                </HeaderedContentControl>

                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_comtext}" IsEnabled="False" Visibility="{Binding ComObjectRefObject.OverwriteText, Converter={StaticResource BoolToVis}, ConverterParameter=true, FallbackValue=Collapsed}" Margin="5 30 5 5">
                    <DataGrid ItemsSource="{Binding ComObjectRefObject.ComObjectObject.Text}" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_comreftext}" IsEnabled="False" Visibility="{Binding ComObjectRefObject.OverwriteText, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Margin="5 30 5 5">
                    <DataGrid ItemsSource="{Binding ComObjectRefObject.Text}" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynParaBlock">
            <StackPanel>
                <Grid Margin="5 0">
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{x:Static p:Resources.gen_id}" />
                        <Run Text="{Binding Id}"/>
                    </TextBlock>
                    <Button Content="{x:Static p:Resources.gen_id_reset}" HorizontalAlignment="Right" Click="ResetId" />
                </Grid>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_access}">
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnumAccess}}" SelectedItem="{Binding Access, Mode=TwoWay}" />
                </HeaderedContentControl>
                <CheckBox Content="{x:Static p:Resources.tdyn_pb_showtree}" IsChecked="{Binding ShowInComObjectTree}" />
                <CheckBox Content="{x:Static p:Resources.tdyn_pb_inline}" IsChecked="{Binding IsInline}" />
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pb_layout}">
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding Layout}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_icon}">
                    <Grid Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseIcon}" VerticalAlignment="Center" />
                        
                        <ComboBox Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding UseIcon}" ItemsSource="{Binding Icons, ElementName=ViewControl}" SelectedItem="{Binding IconObject}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Data, Converter={StaticResource DataToImage}}" Height="20" />
                                        <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center" Margin="10 0 0 0" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </HeaderedContentControl>

                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pb_rows}" Visibility="{Binding Layout, Converter={StaticResource EnumToVis}, ConverterParameter=Grid-Table}">
                    <DataGrid ItemsSource="{Binding Rows}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.tdyn_id}" Binding="{Binding Id}" IsReadOnly="True" />
                            <DataGridTextColumn Header="{x:Static p:Resources.prop_name}" Binding="{Binding Name}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>

                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pb_cells}" Visibility="{Binding Layout, Converter={StaticResource EnumToVis}, ConverterParameter=Grid-Table}">
                    <DataGrid ItemsSource="{Binding Columns}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.tdyn_id}" Binding="{Binding Id}" IsReadOnly="True" />
                            <DataGridTextColumn Header="{x:Static p:Resources.prop_name}" Binding="{Binding Name}" />
                            <DataGridTextColumn Header="{x:Static p:Resources.tdyn_pb_width}" Binding="{Binding Width}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </HeaderedContentControl>
                
                <StackPanel Visibility="{Binding IsInline, Converter={StaticResource BoolToVis}, ConverterParameter=true}">
                    <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pararef}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <CheckBox IsChecked="{Binding UseParameterRef}" VerticalAlignment="Center" />
                            <ComboBox Grid.Column="1" IsEditable="true" IsEnabled="{Binding UseParameterRef}" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding ParameterRefObject, Mode=TwoWay}" DisplayMemberPath="Name" />    
                            <TextBlock Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10 0 0 4">
                                <Hyperlink ToolTip="{x:Static p:Resources.tcheck_tooltip}" NavigateUri="https://example.com" RequestNavigate="DynBlockParaRefLink">&lt;--</Hyperlink>
                            </TextBlock>                           
                        </Grid>
                    </HeaderedContentControl>
                    <HeaderedContentControl Header="{x:Static p:Resources.tdyn_textpara}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
    
                            <CheckBox IsChecked="{Binding UseTextParameter}" VerticalAlignment="Center" />
                            <ComboBox Grid.Column="1" IsEditable="true" IsEnabled="{Binding UseTextParameter}" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding TextRefObject, Mode=TwoWay}" DisplayMemberPath="Name" />
                        </Grid>
                    </HeaderedContentControl>
                    <HeaderedContentControl Header="{x:Static p:Resources.gen_text}" IsEnabled="{Binding UseParameterRef, Converter={StaticResource BoolNegate}}">
                        <StackPanel>
                            <CheckBox IsChecked="{Binding TranslationText}" Content="{x:Static p:Resources.gen_onlydeflang}" />
                            <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                    <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                                </DataGrid.Columns>
                            </DataGrid>
                        </StackPanel>
                    </HeaderedContentControl>
                </StackPanel>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynSeparator">
            <StackPanel>
                <Grid Visibility="{Binding UseTextParameter, Converter={StaticResource BoolToVis}, ConverterParameter=true}" Margin="5 0">
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{x:Static p:Resources.gen_id}" />
                        <Run Text="{Binding Id}"/>
                    </TextBlock>
                    <Button Content="{x:Static p:Resources.gen_id_reset}" HorizontalAlignment="Right" Click="ResetId" />
                </Grid>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_textpara}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseTextParameter}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" IsEnabled="{Binding UseTextParameter}" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding TextRefObject, Mode=TwoWay}" DisplayMemberPath="Name" />
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_icon}">
                    <Grid Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseIcon}" VerticalAlignment="Center" />
                        
                        <ComboBox Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding UseIcon}" ItemsSource="{Binding Icons, ElementName=ViewControl}" SelectedItem="{Binding IconObject}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Data, Converter={StaticResource DataToImage}}" Height="20" />
                                        <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center" Margin="10 0 0 0" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.gen_text}">
                    <StackPanel>
                        <CheckBox IsChecked="{Binding TranslationText}" Content="{x:Static p:Resources.gen_onlydeflang}" />
                        <DataGrid IsEnabled="{Binding UseTextParameter, Converter={StaticResource BoolNegate}}"  ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_uihint}">
                    <HeaderedContentControl.Resources>
                        <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                            <ObjectDataProvider.MethodParameters>
                                <x:Type TypeName="dyn:SeparatorHint"/>
                            </ObjectDataProvider.MethodParameters>
                        </ObjectDataProvider>
                    </HeaderedContentControl.Resources>
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding Hint}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_paracell}">
                    <TextBox Text="{Binding Cell, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_access}">
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnumAccess}}" SelectedItem="{Binding Access, Mode=TwoWay}" />
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynChannel">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_number}">
                    <TextBox Text="{Binding Number, UpdateSourceTrigger=PropertyChanged}" IsEnabled="False" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_icon}">
                    <Grid Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseIcon}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding UseIcon}" ItemsSource="{Binding Icons, ElementName=ViewControl}" SelectedItem="{Binding IconObject}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Data, Converter={StaticResource DataToImage}}" Height="20" />
                                        <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center" Margin="10 0 0 0" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_textpara}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseTextParameter}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" IsEnabled="{Binding UseTextParameter}" ItemsSource="{Binding Version.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding ParameterRefObject, Mode=TwoWay}" DisplayMemberPath="Name" />
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.gen_text}">
                    <StackPanel>
                        <CheckBox IsChecked="{Binding TranslationText}" Content="{x:Static p:Resources.gen_onlydeflang}" />
                        <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynChoose">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pararef}">
                    <StackPanel>
                        <CheckBox Content="IsGlobal" IsChecked="{Binding IsGlobal}" Margin="0 3" />
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="auto" />
                            </Grid.ColumnDefinitions>
                            <ComboBox Grid.Column="0" Visibility="{Binding IsGlobal, Converter={StaticResource BoolToVis}, ConverterParameter=true}" IsEditable="true" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding ParameterRefObject}" DisplayMemberPath="Name"/>
                            <ComboBox Grid.Column="0" Visibility="{Binding IsGlobal, Converter={StaticResource BoolToVis}}" IsEditable="true" ItemsSource="{Binding Version.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding ParameterRefObject}" DisplayMemberPath="Name"/>
                            <TextBlock Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10 0 0 4">
                                <Hyperlink ToolTip="{x:Static p:Resources.tcheck_tooltip}" NavigateUri="https://example.com" RequestNavigate="DynChooseParaRefLink">&lt;--</Hyperlink>
                            </TextBlock>
                        </Grid>                  
                    </StackPanel>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynWhen">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_cond}">
                    <TextBox Text="{Binding Condition}" IsEnabled="{Binding IsDefault, Converter={StaticResource BoolNegate}}" />
                </HeaderedContentControl>
                <CheckBox IsChecked="{Binding IsDefault}" Content="{x:Static p:Resources.tdyn_when_def}" />
                <TextBlock Margin="5">
                    <Run Text="{x:Static p:Resources.tdyn_when1}" />
                    <LineBreak />
                    <Run Text="{x:Static p:Resources.tdyn_when2}" />
                    <LineBreak />
                    <Run Text="{x:Static p:Resources.tdyn_when3}" />
                    <LineBreak />
                    <Run Text="{x:Static p:Resources.tdyn_when4}" />
                    <LineBreak />
                    <Run Text="{x:Static p:Resources.tdyn_when5}" />
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynAssign">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_ass_target}">
                    <ComboBox IsEditable="true" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding TargetObject}" DisplayMemberPath="Name" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_ass_source}">
                    <ComboBox IsEditable="true" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding SourceObject}" DisplayMemberPath="Name" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_ass_value}">
                    <TextBox Text="{Binding Value}" />
                </HeaderedContentControl>

                <TextBlock>
                    <Run Text="{x:Static p:Resources.tdyn_ass_warning1}" />
                    <Run Text="{x:Static p:Resources.tdyn_ass_warning2}" />
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynRepeat">
            <StackPanel>
                <Grid Margin="5 0">
                    <TextBlock VerticalAlignment="Center">
                        <Run Text="{x:Static p:Resources.gen_id}" />
                        <Run Text="{Binding Id}"/>
                    </TextBlock>
                    <Button Content="{x:Static p:Resources.gen_id_reset}" HorizontalAlignment="Right" Click="ResetId" />
                </Grid>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_count}">
                    <TextBox Text="{Binding Count, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_pararef}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseParameterRef}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" IsEnabled="{Binding UseParameterRef}" ItemsSource="{Binding Version.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding ParameterRefObject, Mode=TwoWay}" DisplayMemberPath="Name" />
                    </Grid>
                </HeaderedContentControl>
            </StackPanel>
        </DataTemplate>
        <DataTemplate x:Key="TempDynButton">
            <StackPanel>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_access}">
                    <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnumAccess}}" SelectedItem="{Binding Access, Mode=TwoWay}" />
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_textpara}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseTextParameter}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" IsEditable="true" IsEnabled="{Binding UseTextParameter}" ItemsSource="{Binding Module.ParameterRefs, ElementName=ViewControl}" SelectedItem="{Binding TextRefObject, Mode=TwoWay}" DisplayMemberPath="Name" />
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_icon}">
                    <Grid Height="35">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding UseIcon}" VerticalAlignment="Center" />
                        <ComboBox Grid.Column="1" VerticalAlignment="Center" IsEnabled="{Binding UseIcon}" ItemsSource="{Binding Icons, ElementName=ViewControl}" SelectedItem="{Binding IconObject}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Source="{Binding Data, Converter={StaticResource DataToImage}}" Height="20" />
                                        <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center" Margin="10 0 0 0" />
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_online}">
                    <ComboBox SelectedValue="{Binding Online}" SelectedValuePath="Tag">
                        <ComboBoxItem Tag="" Content="{x:Static p:Resources.prop_offline}" />
                        <ComboBoxItem Tag="ConnectionLess" Content="{x:Static p:Resources.prop_connless}" />
                        <ComboBoxItem Tag="ConnectionOriented" Content="{x:Static p:Resources.prop_connoriented}" />
                    </ComboBox>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.prop_handlerparas}">
                    <TextBox Text="{Binding EventHandlerParameters, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.tdyn_paracell}">
                    <TextBox Text="{Binding Cell, UpdateSourceTrigger=PropertyChanged}" />
                </HeaderedContentControl>


                <HeaderedContentControl Header="{x:Static p:Resources.gen_text}">
                    <StackPanel>
                        <CheckBox IsChecked="{Binding TranslationText}" Content="{x:Static p:Resources.gen_onlydeflang}" />
                        <DataGrid ItemsSource="{Binding Text}" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                                <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </HeaderedContentControl>
                <!--<TextBox Text="{Binding Script}" Margin="5 0" AcceptsReturn="True" />-->
                <Button Margin="5 20 5 0" Content="Edit Function" Click="ClickEditButtonFunction" />
                <TextBlock Margin="5 10 5 0" Text="function buttonXXXX(device, online, progress, context) {" />
                <TextBlock Margin="20 0 5 0" Text="{Binding Script}" />
                <TextBlock Margin="5 0" Text="}" />
            </StackPanel>
        </DataTemplate>
        
        <select:DynSelector x:Key="SelectorDyn"
            DPara="{StaticResource TempDynParameter}"
            DBlock="{StaticResource TempDynParaBlock}"
            DChoose="{StaticResource TempDynChoose}" 
            DWhen="{StaticResource TempDynWhen}"
            DMain="{StaticResource TempDynMain}"
            DMainM="{StaticResource TempDynMainModule}"
            DIndependent="{StaticResource TempDynIndependent}"
            DChannel="{StaticResource TempDynChannel}"
            DModule="{StaticResource TempDynModule}"
            DCom="{StaticResource TempDynComObject}"
            DSeparator="{StaticResource TempDynSeparator}"
            DAssign="{StaticResource TempDynAssign}"
            DRepeat="{StaticResource TempDynRepeat}"
            DButton="{StaticResource TempDynButton}" />
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <TreeView x:Name="DynamicList" ItemsSource="{Binding Module.Dynamics, ElementName=ViewControl}" MinWidth="300"
            AllowDrop="True" MouseMove="TreeMouseMove" DragOver="TreeDragOver" Drop="TreeDrop">
            <TreeView.ItemContainerStyle>
				<Style TargetType="TreeViewItem">
					<Setter Property="IsExpanded" Value="{Binding IsExpanded}" />
					<Setter Property="IsSelected" Value="{Binding IsSelected}" />
				</Style>
			</TreeView.ItemContainerStyle>
            <TreeView.Resources>
                <ContextMenu x:Key="ContextMenu" Loaded="LoadingContextDynWhen">
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_ichan}" Click="ClickAddDynIndep" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_chan}" Click="ClickAddDynChannel" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_block}" Click="ClickAddDynBlock" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_mod}" Click="ClickAddDynModule" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_choose}" Click="ClickAddDynChoose" />
                    <Separator />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_para}" Click="ClickAddDynPara" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_com}" Click="ClickAddDynCom" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_sepa}" Click="ClickAddDynSep" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_assign}" Click="ClickAddDynAssign" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_repeat}" Click="ClickAddDynRepeat" />
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_btn}" Click="ClickAddDynButton" />
                    <Separator />
                    <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                    <Separator />
                    <MenuItem Header="{x:Static p:Resources.gen_unfold}" Click="ClickOpenDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_collapse}" Click="ClickCloseDyn" />
                </ContextMenu>
                <ContextMenu x:Key="ContextMenuChoose">
                    <MenuItem Header="{x:Static p:Resources.tdyn_add_cond}" Click="ClickAddDynWhen" />
                    <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                    <Separator />
                    <MenuItem Header="{x:Static p:Resources.gen_unfold}" Click="ClickOpenDyn" />
                    <MenuItem Header="{x:Static p:Resources.gen_collapse}" Click="ClickCloseDyn" />
                </ContextMenu>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynamicMain}" ItemsSource="{Binding Items}">
                    <TextBlock Text="{x:Static p:Resources.tdyn_troot}" ContextMenu="{StaticResource ContextMenu}" />
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynamicModule}" ItemsSource="{Binding Items}">
                    <TextBlock Text="{x:Static p:Resources.tdyn_troot}" ContextMenu="{StaticResource ContextMenu}" />
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynChannel}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Block.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center" ContextMenu="{StaticResource ContextMenu}">
                            <Run Text="{x:Static p:Resources.tdyn_tchan}" />
                            <Run Text="{Binding Name}" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynChannelIndependent}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource ContextMenu}">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Block.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock Text="Channel Independent" VerticalAlignment="Center" />
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynParaBlock}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource ContextMenu}">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Block.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_tblock}" />
                            <Run Text="{Binding Name}" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynChooseChannel}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Choose.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center" ContextMenu="{StaticResource ContextMenuChoose}">
                            <Run Text="{x:Static p:Resources.tdyn_tselection}" />
                            <Run Text="{Binding Name}" />
                            <Run Text="{Binding ParameterRefObject.Name}" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynChooseBlock}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource ContextMenuChoose}">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Choose.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_tselection}" />
                            <Run Text="{Binding Name}" />
                            <Run Text="{Binding ParameterRefObject.Name}" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynWhenChannel}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/When.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center" ContextMenu="{StaticResource ContextMenu}">
                            <Run Text="{x:Static p:Resources.tdyn_tcond}" />
                            <Run Text="{Binding Name}" />
                            <Run Text="[" />
                            <Run Text="{Binding Condition}" />
                            <Run Text="]" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynWhenBlock}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/When.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center" ContextMenu="{StaticResource ContextMenu}">
                            <Run Text="{x:Static p:Resources.tdyn_tcond}" />
                            <Run Text="{Binding Name}" />
                            <Run Text="[" />
                            <Run Text="{Binding Condition}" />
                            <Run Text="]" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <HierarchicalDataTemplate DataType="{x:Type dyn:DynRepeat}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal" ContextMenu="{StaticResource ContextMenu}">
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Parameter.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_trepe}" />
                            <Run Text="{Binding Name}" />
                        </TextBlock>
                    </StackPanel>
                </HierarchicalDataTemplate>
                <DataTemplate DataType="{x:Type dyn:DynButton}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Button.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_tbutton}" />
                            <Run Text="{Binding Name}" />
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type dyn:DynParameter}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Parameter.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_tpara}" />
                            <Run Text="{Binding Name}" />
                            <Run Text="{Binding ParameterRefObject.Name}" />
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type dyn:DynComObject}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/ComObject.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_tcom}" />
                            <Run Text="{Binding Name}" />
                            <Run Text="{Binding ComObjectRefObject.Name}" />
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type dyn:DynSeparator}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Separator.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock Text="{x:Static p:Resources.tdyn_tseparator}" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type dyn:DynAssign}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Assign.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock Text="{x:Static p:Resources.tdyn_tassign}" VerticalAlignment="Center" />
                    </StackPanel>
                </DataTemplate>
                <DataTemplate DataType="{x:Type dyn:DynModule}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="{x:Static p:Resources.gen_copy}" Click="ClickCopyDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_cut}" Click="ClickCutDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_put}" Click="ClickInsertDyn" />
                                <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveDyn" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <Image Source="{svgc:SvgImage Source=/Assets/Images/Dynamic/Block.svg, AppName=Kaenx.Creator}" Height="18" Width="18" Margin="4" />
                        <TextBlock VerticalAlignment="Center">
                            <Run Text="{x:Static p:Resources.tdyn_tmod}" />
                            <Run Text="{Binding Name}" />
                        </TextBlock>
                    </StackPanel>
                </DataTemplate>
            </TreeView.Resources>
        </TreeView>

        <ScrollViewer Grid.Column="1" DataContext="{Binding ElementName=DynamicList, Path=SelectedItem}">
            <ScrollViewer.Resources>
                <Style TargetType="HeaderedContentControl">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="0" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="ListView">
                    <Setter Property="Margin" Value="5" />
                </Style>
            </ScrollViewer.Resources>
            <ContentPresenter Content="{Binding ElementName=DynamicList, Path=SelectedItem}" ContentTemplateSelector="{StaticResource SelectorDyn}" />
        </ScrollViewer>
    </Grid>

</UserControl>