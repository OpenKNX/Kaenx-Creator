<UserControl
    x:Class="Kaenx.Creator.Controls.ParameterTypeView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:p="clr-namespace:Kaenx.Creator.Properties"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:conv="clr-namespace:Kaenx.Creator.Converter"
    xmlns:models="clr-namespace:Kaenx.Creator.Models"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400"
    x:Name="ViewControl">
    <UserControl.Resources>
        <conv:EmptyToBool x:Key="EmptyToBool" />
        <conv:EnumToVisibility x:Key="EnumToVis" />
        <conv:EnumToVisibility x:Key="EnumToVisNeg" Negate="True" />
        <conv:BoolToVisibility x:Key="BoolToVis" />
        <conv:BoolNegation x:Key="BoolNeg" />
        <conv:BoolToBrush x:Key="BoolToBrush" TrueValue="Red" FalseValue="Black" />

        <ContextMenu x:Key="ListMenu">
            <MenuItem Header="{x:Static p:Resources.gen_remove}" Click="ClickRemoveParamType" />
        </ContextMenu>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="300" MinWidth="300" />
            <ColumnDefinition Width="10" />
            <ColumnDefinition MinWidth="300" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Button Content="{x:Static p:Resources.gen_add}" Click="ClickAddParamType" Margin="0 0 0 2" />
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBlock Text="{x:Static p:Resources.gen_filter}" Margin="2 0 2 1" VerticalAlignment="Center" />
            <TextBox x:Name="query" Grid.Column="1" Margin="1 0 0 2" />
        </Grid>


        <ListView x:Name="ListParamTypes" Grid.Row="2" ItemsSource="{Binding Version.ParameterTypes, ElementName=ViewControl}">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}" Foreground="{Binding IsNotUsed, Converter={StaticResource BoolToBrush}}" />
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="ContextMenu" Value="{StaticResource ListMenu}" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <GridSplitter Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Stretch" />

        <StackPanel Grid.Column="3" Grid.RowSpan="3" Margin="5" DataContext="{Binding ElementName=ListParamTypes, Path=SelectedItem}" IsEnabled="{Binding Converter={StaticResource EmptyToBool}, ConverterParameter=true}">
            <StackPanel.Resources>
                <ObjectDataProvider x:Key="dataFromEnum" MethodName="GetValues" ObjectType="{x:Type System:Enum}">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="models:ParameterTypes"/>
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
                <Style TargetType="HeaderedContentControl">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="IsTabStop" Value="false" />
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="0 5" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="Margin" Value="5" />
                </Style>
                <Style TargetType="ListView">
                    <Setter Property="Margin" Value="5" />
                </Style>
            </StackPanel.Resources>
                
            <TextBlock Text="{x:Static p:Resources.parat_error}" Foreground="Red" Visibility="{Binding IsNotUsed, Converter={StaticResource BoolToVis}, FallbackValue=Collapsed}" Margin="5" />

            <HeaderedContentControl Header="{x:Static p:Resources.prop_name}">
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
            </HeaderedContentControl>
            <HeaderedContentControl Header="{x:Static p:Resources.prop_type}">
                <ComboBox ItemsSource="{Binding Source={StaticResource dataFromEnum}}" SelectedItem="{Binding Type, Mode=TwoWay}" />
            </HeaderedContentControl>
            
            <HeaderedContentControl Header="{x:Static p:Resources.parat_mansize}" Visibility="{Binding Type, Converter={StaticResource EnumToVisNeg}, ConverterParameter=None-IpAddress-Picture-Color-RawData-Date-Float_DPT9-Float_IEEE_Double-Float_IEEE_Single}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <CheckBox IsChecked="{Binding IsSizeManual}" VerticalAlignment="Center" />
                    <TextBox Grid.Column="1" Text="{Binding SizeInBit, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" IsEnabled="{Binding IsSizeManual}"/>
                </Grid>
            </HeaderedContentControl>


            <Button Content="{x:Static p:Resources.parat_add}" Click="ClickAddParamEnum" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Enum, FallbackValue=Collapsed}" />
        

            <Grid Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Enum, FallbackValue=Collapsed}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="330" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <DataGrid x:Name="ptypeList" Margin="5" ItemsSource="{Binding Enums}" AutoGenerateColumns="False" CanUserAddRows="False">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="{x:Static p:Resources.prop_name}" Binding="{Binding Name}" Width="*" />
                        <DataGridTextColumn Header="{x:Static p:Resources.prop_value}" Binding="{Binding Value}" MinWidth="50" />
                        <DataGridCheckBoxColumn Header="{x:Static p:Resources.prop_trans}" Binding="{Binding Translate}" MinWidth="50" />
                    </DataGrid.Columns>
                </DataGrid>

                <StackPanel Grid.Column="1" IsEnabled="{Binding ., Converter={StaticResource EmptyToBool}, ConverterParameter=true}" DataContext="{Binding SelectedItem, ElementName=ptypeList}">
                    <HeaderedContentControl Header="{x:Static p:Resources.prop_icon}">
                        <Grid Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto" />
                                <ColumnDefinition />
                                <ColumnDefinition Width="35" />
                            </Grid.ColumnDefinitions>

                            <CheckBox IsChecked="{Binding UseIcon}" VerticalAlignment="Center" />
                            <ComboBox Grid.Column="1" Margin="0 0 5 0" VerticalAlignment="Center" IsEnabled="{Binding UseIcon}" ItemsSource="{Binding Icons, ElementName=ViewControl}" SelectedItem="{Binding IconObject}" DisplayMemberPath="Name" />
                            <Image Grid.Column="2" Source="{Binding IconObject.Source}" />
                        </Grid>
                    </HeaderedContentControl>

                    <DataGrid ItemsSource="{Binding Text}" Margin="5" AutoGenerateColumns="False" CanUserDeleteRows="False" CanUserAddRows="False" CanUserSortColumns="False" CanUserResizeRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_lang}" Binding="{Binding Language.Text}" IsReadOnly="True" />
                            <DataGridTextColumn Header="{x:Static p:Resources.gen_text}" Binding="{Binding Text, UpdateSourceTrigger=PropertyChanged}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Grid>
   
            <StackPanel Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=NumberUInt-NumberInt-Float_DPT9-Float_IEEE_Single-Float_IEEE_Double, FallbackValue=Collapsed}">
                <HeaderedContentControl Header="{x:Static p:Resources.parat_min}">
                    <TextBox Text="{Binding Min, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.parat_max}">
                    <TextBox Text="{Binding Max, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.parat_increment}">
                    <TextBox Text="{Binding Increment, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.parat_doffset}">
                    <TextBox Text="{Binding DisplayOffset, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
                <HeaderedContentControl Header="{x:Static p:Resources.parat_dfactor}">
                    <TextBox Text="{Binding DisplayFactor, UpdateSourceTrigger=PropertyChanged}"/>
                </HeaderedContentControl>
            </StackPanel>

            <HeaderedContentControl Header="{x:Static p:Resources.parat_uihint}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=NumberUInt-NumberInt, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag">
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_none}" Tag="None" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_slider}" Tag="Slider" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_check}" Tag="CheckBox" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_prog}" Tag="ProgressBar" />
                </ComboBox>
            </HeaderedContentControl>

            <HeaderedContentControl Header="{x:Static p:Resources.parat_uihint}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Float_DPT9-Float_IEEE_Single-Float_IEEE_Double, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag">
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_none}" Tag="None" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_slider}" Tag="Slider" />
                </ComboBox>
            </HeaderedContentControl>

            <HeaderedContentControl Header="{x:Static p:Resources.parat_addrt}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=IpAddress, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag">
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ha}" Tag="HostAddress" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ga}" Tag="GatewayAddress" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ua}" Tag="UnicastAddress" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ba}" Tag="BroadcastAddress" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ma}" Tag="MulticastAddress" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_sm}" Tag="SubnetMask" />
                </ComboBox>
            </HeaderedContentControl>
            
            <HeaderedContentControl Header="{x:Static p:Resources.parat_vers}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=IpAddress, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding Increment}" SelectedValuePath="Tag">
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_none}" Tag="None" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ipv4}" Tag="IPv4" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_ipv6}" Tag="IPv6" />
                </ComboBox>
            </HeaderedContentControl>
            
            <HeaderedContentControl Header="{x:Static p:Resources.parat_bagg}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Picture, FallbackValue=Collapsed}">
                <ComboBox ItemsSource="{Binding Baggages, ElementName=ViewControl}" SelectedItem="{Binding BaggageObject}" DisplayMemberPath="Name" Margin="0 5" />
            </HeaderedContentControl>

            <Image Source="{Binding BaggageObject.Source}" Margin="5" Stretch="Uniform" MaxHeight="250"  Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Picture, FallbackValue=Collapsed}" />

            <HeaderedContentControl Header="{x:Static p:Resources.parat_hue}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Color, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag" Margin="0 5">
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_rgb}" Tag="RGB" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_rgbw}" Tag="RGBW" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_hsv}" Tag="HSV" />
                </ComboBox>
            </HeaderedContentControl>
            
            <HeaderedContentControl Header="{x:Static p:Resources.parat_uihint}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Enum, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding UIHint}" SelectedValuePath="Tag" Margin="0 5">
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_none}" Tag="" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_text}" Tag="Text" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_drop}" Tag="DropDown" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_btn}" Tag="Buttons" />
                    <ComboBoxItem Content="{x:Static p:Resources.parat_uihint_seg}" Tag="Segmented" />
                </ComboBox>
            </HeaderedContentControl>
            
            <HeaderedContentControl Header="{x:Static p:Resources.parat_max}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=RawData, FallbackValue=Collapsed}">
                <TextBox Text="{Binding Max, UpdateSourceTrigger=PropertyChanged}"/>
            </HeaderedContentControl>
            
            <HeaderedContentControl Header="{x:Static p:Resources.parat_date}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Date, FallbackValue=Collapsed}">
                <ComboBox SelectedValue="{Binding UIHint, Mode=TwoWay}" SelectedValuePath="Tag">
                    <ComboBoxItem Content="Leer" Tag="" />
                    <ComboBoxItem Content="DPT 11" Tag="DPT 11" />
                </ComboBox>
            </HeaderedContentControl>
            
            <CheckBox IsChecked="{Binding OtherValue}" Content="{x:Static p:Resources.parat_year}" Visibility="{Binding Type, Converter={StaticResource EnumToVis}, ConverterParameter=Date, FallbackValue=Collapsed}" />
        </StackPanel>
    </Grid>

</UserControl>